{
  "address": "0x6b22adf22F2930dDAC8e0c7bB3782AB61af94aCa",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "adr",
          "type": "address"
        }
      ],
      "name": "getAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x156f0c870d6b65f0d5ba54459c9025817132e5a37471d3419124c0a60275e43b",
  "receipt": {
    "to": null,
    "from": "0x2dC9ba58F00B69887B6448972c7F43547A38478A",
    "contractAddress": "0x6b22adf22F2930dDAC8e0c7bB3782AB61af94aCa",
    "transactionIndex": 3,
    "gasUsed": "990527",
    "logsBloom": "0x
    "blockHash": "0x6e6e78d057a9fa44e4e58760b51eef52cf512789e37ad9913fca0f607c39696c",
    "transactionHash": "0x156f0c870d6b65f0d5ba54459c9025817132e5a37471d3419124c0a60275e43b",
    "logs": [],
    "blockNumber": 3575611,
    "cumulativeGasUsed": "1066185",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 5,
  "solcInputHash": "7150d25161089cd15a1c2ca708b851a0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"adr\",\"type\":\"address\"}],\"name\":\"getAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7; // >=0.8.7 <0.9.0   ^0.8.7\\n//imports\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n//error codes\\nerror FundMe__NotOwner();\\n//interfaces, libraries, Contracts\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e8;\\n\\n    address[] private s_funders;\\n    mapping (address => uint256) private s_addressToAmountFunded;\\n\\n    address private immutable i_owner;\\n    AggregatorV3Interface private immutable s_priceFeed;\\n\\n    constructor(address _priceFeed) {\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        i_owner = msg.sender;\\n    }\\n\\n    function getOwner() public view returns(address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAmountFunded(address adr) public view returns(uint256) {\\n        return s_addressToAmountFunded[adr];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You have to send at least 50 USD\\\");\\n\\n        s_funders.push(msg.sender);\\n        uint256 prevValue = s_addressToAmountFunded[msg.sender];\\n        s_addressToAmountFunded[msg.sender] = prevValue + msg.value;\\n    }\\n\\n    function getList() public view returns (uint256) {\\n        return s_addressToAmountFunded[msg.sender];\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for(uint256 funderI = 0; funderI < s_funders.length; funderI++) {\\n            address funder = s_funders[funderI];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings can't be in memory\\n        for(uint256 funderI = 0; funderI < funders.length; funderI++) {\\n            address funder = funders[funderI];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n        (bool success, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(success, \\\"Call failed\\\");\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    modifier onlyOwner() {\\n        if(msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n}\",\"keccak256\":\"0xcfd88eec2c86a3eb3b2dc9fc3943d7adf48334e11b6318b585e1ad5c7066181c\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7; // >=0.8.7 <0.9.0   ^0.8.7\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    function getEthPrice(AggregatorV3Interface priceFeed) internal view returns (int256) {\\r\\n        (\\r\\n        /* uint80 roundID */,\\r\\n        int256 answer,\\r\\n        /*uint startedAt*/,\\r\\n        /*uint timeStamp*/,\\r\\n        /*uint80 answeredInRound*/\\r\\n        ) = priceFeed.latestRoundData();\\r\\n\\r\\n        return answer;\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        uint256 ethPrice = uint256(getEthPrice(priceFeed));\\r\\n        //1e18 = 1_000000000000000000\\r\\n        uint256 ethInUsd = (ethAmount * ethPrice) / 1e8;\\r\\n\\r\\n        return ethInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x035aa2314a0f1defa68fc0ef31ab156f11d97526dbdecc5d5af350d37e171225\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200127a3803806200127a8339818101604052810190620000379190620000c3565b8073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000148565b600081519050620000bd816200012e565b92915050565b600060208284031215620000dc57620000db62000129565b5b6000620000ec84828501620000ac565b91505092915050565b6000620001028262000109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200013981620000f5565b81146200014557600080fd5b50565b60805160601c60a05160601c6110f1620001896000396000818161020c0152610630015260008181610376015281816105c1015261069f01526110f16000f3fe60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461013b578063a48b455514610166578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101c457610099565b80633ccfd60b146100a35780636b69a592146100ba578063893d20e8146100e5578063942b765a1461011057610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b8610374565b005b3480156100c657600080fd5b506100cf6105b4565b6040516100dc9190610d56565b60405180910390f35b3480156100f157600080fd5b506100fa6105bd565b6040516101079190610ce0565b60405180910390f35b34801561011c57600080fd5b506101256105e5565b6040516101329190610d56565b60405180910390f35b34801561014757600080fd5b5061015061062c565b60405161015d9190610cfb565b60405180910390f35b34801561017257600080fd5b5061018d60048036038101906101889190610b60565b610654565b60405161019a9190610d56565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101c261069d565b005b3480156101d057600080fd5b506101eb60048036038101906101e69190610b8d565b610941565b6040516101f89190610ce0565b60405180910390f35b64012a05f20061023a7f00000000000000000000000000000000000000000000000000000000000000003461098890919063ffffffff16565b101561027b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027290610d36565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050348161032e9190610d8d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104a457600080828154811061041e5761041d610fa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049c90610f00565b9150506103fc565b50600067ffffffffffffffff8111156104c0576104bf610fd6565b5b6040519080825280602002602001820160405280156104ee5781602001602082028036833780820191505090505b5060009080519060200190610504929190610a50565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052b90610ccb565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b50509050806105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890610d16565b60405180910390fd5b50565b64012a05f20081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610722576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075b575b5050505050905060005b81518110156108305760008282815181106107cd576107cc610fa7565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082890610f00565b9150506107af565b50600067ffffffffffffffff81111561084c5761084b610fd6565b5b60405190808252806020026020018201604052801561087a5781602001602082028036833780820191505090505b5060009080519060200190610890929190610a50565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108b790610ccb565b60006040518083038185875af1925050503d80600081146108f4576040519150601f19603f3d011682016040523d82523d6000602084013e6108f9565b606091505b505090508061093d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093490610d16565b60405180910390fd5b5050565b600080828154811061095657610955610fa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610994836109c0565b905060006305f5e10082866109a99190610e14565b6109b39190610de3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190610bba565b50505091505080915050919050565b828054828255906000526020600020908101928215610ac9579160200282015b82811115610ac85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a70565b5b509050610ad69190610ada565b5090565b5b80821115610af3576000816000905550600101610adb565b5090565b600081359050610b068161105f565b92915050565b600081519050610b1b81611076565b92915050565b600081359050610b308161108d565b92915050565b600081519050610b458161108d565b92915050565b600081519050610b5a816110a4565b92915050565b600060208284031215610b7657610b75611005565b5b6000610b8484828501610af7565b91505092915050565b600060208284031215610ba357610ba2611005565b5b6000610bb184828501610b21565b91505092915050565b600080600080600060a08688031215610bd657610bd5611005565b5b6000610be488828901610b4b565b9550506020610bf588828901610b0c565b9450506040610c0688828901610b36565b9350506060610c1788828901610b36565b9250506080610c2888828901610b4b565b9150509295509295909350565b610c3e81610e6e565b82525050565b610c4d81610eca565b82525050565b6000610c60600b83610d7c565b9150610c6b8261100a565b602082019050919050565b6000610c83602083610d7c565b9150610c8e82611033565b602082019050919050565b6000610ca6600083610d71565b9150610cb18261105c565b600082019050919050565b610cc581610eaa565b82525050565b6000610cd682610c99565b9150819050919050565b6000602082019050610cf56000830184610c35565b92915050565b6000602082019050610d106000830184610c44565b92915050565b60006020820190508181036000830152610d2f81610c53565b9050919050565b60006020820190508181036000830152610d4f81610c76565b9050919050565b6000602082019050610d6b6000830184610cbc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d9882610eaa565b9150610da383610eaa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dd857610dd7610f49565b5b828201905092915050565b6000610dee82610eaa565b9150610df983610eaa565b925082610e0957610e08610f78565b5b828204905092915050565b6000610e1f82610eaa565b9150610e2a83610eaa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6357610e62610f49565b5b828202905092915050565b6000610e7982610e8a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ed582610edc565b9050919050565b6000610ee782610eee565b9050919050565b6000610ef982610e8a565b9050919050565b6000610f0b82610eaa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3e57610f3d610f49565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206861766520746f2073656e64206174206c6561737420353020555344600082015250565b50565b61106881610e6e565b811461107357600080fd5b50565b61107f81610e80565b811461108a57600080fd5b50565b61109681610eaa565b81146110a157600080fd5b50565b6110ad81610eb4565b81146110b857600080fd5b5056fea26469706673582212203b4e80fa63dbac803de5f003eb053da4f5109cae65dd8410c7f800e94ff8e64764736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c80639e87a5cd116100595780639e87a5cd1461013b578063a48b455514610166578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101c457610099565b80633ccfd60b146100a35780636b69a592146100ba578063893d20e8146100e5578063942b765a1461011057610099565b3661009957610097610201565b005b6100a1610201565b005b3480156100af57600080fd5b506100b8610374565b005b3480156100c657600080fd5b506100cf6105b4565b6040516100dc9190610d56565b60405180910390f35b3480156100f157600080fd5b506100fa6105bd565b6040516101079190610ce0565b60405180910390f35b34801561011c57600080fd5b506101256105e5565b6040516101329190610d56565b60405180910390f35b34801561014757600080fd5b5061015061062c565b60405161015d9190610cfb565b60405180910390f35b34801561017257600080fd5b5061018d60048036038101906101889190610b60565b610654565b60405161019a9190610d56565b60405180910390f35b6101ab610201565b005b3480156101b957600080fd5b506101c261069d565b005b3480156101d057600080fd5b506101eb60048036038101906101e69190610b8d565b610941565b6040516101f89190610ce0565b60405180910390f35b64012a05f20061023a7f00000000000000000000000000000000000000000000000000000000000000003461098890919063ffffffff16565b101561027b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027290610d36565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050348161032e9190610d8d565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f9576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104a457600080828154811061041e5761041d610fa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049c90610f00565b9150506103fc565b50600067ffffffffffffffff8111156104c0576104bf610fd6565b5b6040519080825280602002602001820160405280156104ee5781602001602082028036833780820191505090505b5060009080519060200190610504929190610a50565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052b90610ccb565b60006040518083038185875af1925050503d8060008114610568576040519150601f19603f3d011682016040523d82523d6000602084013e61056d565b606091505b50509050806105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890610d16565b60405180910390fd5b50565b64012a05f20081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610722576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156107a557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075b575b5050505050905060005b81518110156108305760008282815181106107cd576107cc610fa7565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082890610f00565b9150506107af565b50600067ffffffffffffffff81111561084c5761084b610fd6565b5b60405190808252806020026020018201604052801561087a5781602001602082028036833780820191505090505b5060009080519060200190610890929190610a50565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108b790610ccb565b60006040518083038185875af1925050503d80600081146108f4576040519150601f19603f3d011682016040523d82523d6000602084013e6108f9565b606091505b505090508061093d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093490610d16565b60405180910390fd5b5050565b600080828154811061095657610955610fa7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610994836109c0565b905060006305f5e10082866109a99190610e14565b6109b39190610de3565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190610bba565b50505091505080915050919050565b828054828255906000526020600020908101928215610ac9579160200282015b82811115610ac85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a70565b5b509050610ad69190610ada565b5090565b5b80821115610af3576000816000905550600101610adb565b5090565b600081359050610b068161105f565b92915050565b600081519050610b1b81611076565b92915050565b600081359050610b308161108d565b92915050565b600081519050610b458161108d565b92915050565b600081519050610b5a816110a4565b92915050565b600060208284031215610b7657610b75611005565b5b6000610b8484828501610af7565b91505092915050565b600060208284031215610ba357610ba2611005565b5b6000610bb184828501610b21565b91505092915050565b600080600080600060a08688031215610bd657610bd5611005565b5b6000610be488828901610b4b565b9550506020610bf588828901610b0c565b9450506040610c0688828901610b36565b9350506060610c1788828901610b36565b9250506080610c2888828901610b4b565b9150509295509295909350565b610c3e81610e6e565b82525050565b610c4d81610eca565b82525050565b6000610c60600b83610d7c565b9150610c6b8261100a565b602082019050919050565b6000610c83602083610d7c565b9150610c8e82611033565b602082019050919050565b6000610ca6600083610d71565b9150610cb18261105c565b600082019050919050565b610cc581610eaa565b82525050565b6000610cd682610c99565b9150819050919050565b6000602082019050610cf56000830184610c35565b92915050565b6000602082019050610d106000830184610c44565b92915050565b60006020820190508181036000830152610d2f81610c53565b9050919050565b60006020820190508181036000830152610d4f81610c76565b9050919050565b6000602082019050610d6b6000830184610cbc565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d9882610eaa565b9150610da383610eaa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610dd857610dd7610f49565b5b828201905092915050565b6000610dee82610eaa565b9150610df983610eaa565b925082610e0957610e08610f78565b5b828204905092915050565b6000610e1f82610eaa565b9150610e2a83610eaa565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e6357610e62610f49565b5b828202905092915050565b6000610e7982610e8a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ed582610edc565b9050919050565b6000610ee782610eee565b9050919050565b6000610ef982610e8a565b9050919050565b6000610f0b82610eaa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f3e57610f3d610f49565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206861766520746f2073656e64206174206c6561737420353020555344600082015250565b50565b61106881610e6e565b811461107357600080fd5b50565b61107f81610e80565b811461108a57600080fd5b50565b61109681610eaa565b81146110a157600080fd5b50565b6110ad81610eb4565b81146110b857600080fd5b5056fea26469706673582212203b4e80fa63dbac803de5f003eb053da4f5109cae65dd8410c7f800e94ff8e64764736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}